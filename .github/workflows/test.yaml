# Try to get a short workflow name and a job name that start with Python
# version to make it easier to check the status inside GitHub UI.
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


defaults:
  run:
    shell: bash


jobs:
  testing:
    runs-on: ubuntu-20.04
    env:
      TOXENV: "${{ matrix.tox-env }}"
      # As of April 2021 GHA VM have 2 CPUs - Azure Standard_DS2_v2
      # Trial distributed jobs enabled to speed up the CI jobs.
      TRIAL_ARGS: "-j 4"
    name: ${{ matrix.python-version }}-${{ matrix.tox-env }}
    strategy:
      fail-fast: false
      matrix:
        # Run on the minimum micro Python version that we can get on CI.
        # When updating the minimum Python version here, also update the
        # `python_requires` from `setup.cfg`.
        # Run on latest minor release of each major python version.
        python-version: [3.6, 3.7, 3.8, 3.9]
        # Tests are executed with the default target which is the full test suite.
        trial-target: ['txacme']

        include:
          - python-version: 3.6
            tox-env: py36
          - python-version: 3.7
            tox-env: py37
          - python-version: 3.8
            tox-env: py38
          - python-version: 3.9
            tox-env: py39
          - python-version: pypy-3.7
            tox-env: pypy3

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key:
          ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml', 'setup.py',
          'setup.cfg', 'tox.ini') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - uses: twisted/python-info-action@v1
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip tox coverage coveralls

    - name: Test
      run: |
        tox ${{ matrix.trial-target }}

    - name: Prepare coverage
      if: always() && contains(matrix['tox-env'])
      run: |
        # sub-process coverage are generated in separate files so we combine them
        # to get an unified coverage for the local run.
        # The XML is generate to be used with 3rd party tools like diff-cover.
        python -m coverage combine
        python -m coverage xml -o coverage.xml -i
        python -m coverage report --skip-covered

    - uses: codecov/codecov-action@v1
      if: always()
      with:
        files: coverage.xml
        name: lnx-${{ matrix.python-version }}-${{ matrix.tox-env }}
        fail_ci_if_error: true
        functionalities: gcov,search
